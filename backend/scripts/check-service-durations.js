const { query } = require('../config/database');

async function checkServiceDurations() {
  console.log('üîç Verificando duraciones de servicios...\n');
  
  try {
    // Obtener todos los servicios
    const services = await query('SELECT id, name, duration, price FROM services ORDER BY id');
    
    console.log('üìã Servicios y sus duraciones:');
    console.log('ID | Nombre | Duraci√≥n (min) | Precio');
    console.log('---|--------|----------------|--------');
    
    services.forEach(service => {
      console.log(`${service.id.toString().padStart(2)} | ${service.name.padEnd(20)} | ${service.duration.toString().padStart(14)} | $${service.price}`);
    });
    
    console.log(`\nüìä Resumen:`);
    console.log(`- Total de servicios: ${services.length}`);
    console.log(`- Duraci√≥n promedio: ${Math.round(services.reduce((sum, s) => sum + s.duration, 0) / services.length)} minutos`);
    console.log(`- Duraci√≥n m√≠nima: ${Math.min(...services.map(s => s.duration))} minutos`);
    console.log(`- Duraci√≥n m√°xima: ${Math.max(...services.map(s => s.duration))} minutos`);
    
    // Verificar si hay servicios con duraci√≥n 0 o null
    const invalidServices = services.filter(s => !s.duration || s.duration <= 0);
    if (invalidServices.length > 0) {
      console.log(`\n‚ö†Ô∏è Servicios con duraci√≥n inv√°lida:`);
      invalidServices.forEach(s => {
        console.log(`- ID ${s.id}: ${s.name} (duraci√≥n: ${s.duration})`);
      });
    } else {
      console.log(`\n‚úÖ Todos los servicios tienen duraci√≥n v√°lida`);
    }
    
  } catch (error) {
    console.error('‚ùå Error verificando servicios:', error);
  }
}

// Ejecutar si se llama directamente
if (require.main === module) {
  checkServiceDurations()
    .then(() => {
      console.log('\n‚úÖ Verificaci√≥n completada');
      process.exit(0);
    })
    .catch((error) => {
      console.error('‚ùå Error en el script:', error);
      process.exit(1);
    });
}

module.exports = { checkServiceDurations }; 